(page "index.html"
			(:require [cljsjs.papaparse]))

(defn papa
	[cell url]
	(.parse js/Papa url #js {:download true
													 :header true
													 :skipEmptyLines true
													 :complete (fn [results]
																			 (let [r (js->clj results :keywordize-keys true)
																						 data (:data r)]
																				 (reset! cell data)))}))

(defc members [])
(defc journals [])
(defc dates [])
(defc roll-call [])

(papa members "members.csv")
(papa journals "journals.csv")
(papa dates "dates.csv")
(papa roll-call "roll_call.csv")

(defelem toolbar-item
	[_ children]
	(div :class "toolbar-item"
			 children))

(defelem spacer
	[_ _]
	(div :class "spacer"))

(html
 (head
	(link :href "https://fonts.googleapis.com/css?family=Roboto:400,300,700" :rel "stylesheet")
	(link :href "css/main.css" :rel "stylesheet"))
 (body
	(let [current-view (cell :index)
				selected-member (cell nil)]
		(div :class "panel fill"
				 (div :class "toolbar"
							(h1 :class "toolbar-item" "Rollcall")
							(spacer)
							(toolbar-item "About our data")
							(toolbar-item "About this site")
							(toolbar-item (a :href "http://torchapps.github.io" "See more apps by Torch")))
				 (div :class "panel-content split-view"
							(ul :class "minor view scrollable list-view"
									(loop-tpl :bindings [member members]
														(let [id (cell= (:id member))
																	full-name (cell= (:full_name member))]
															(li :class (cell= {:testing true
																								 :selected (= selected-member id)})
																	:click #(reset! selected-member @id)
																	(div full-name)))))
							(div :class "major view"
									 "yo"))))))
